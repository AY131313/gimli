lib_LTLIBRARIES = libgimli.la

include_HEADERS = gimli.h

# 			kdtree++/AUTHORS \
# 			kdtree++/COPYING \
# 			kdtree++/NEWS \
# 			kdtree++/README \
# 			kdtree++/allocator.hpp \
# 			kdtree++/function.hpp \
# 			kdtree++/iterator.hpp \
# 			kdtree++/kdtree.hpp \
# 			kdtree++/node.hpp \
# 			kdtree++/region.hpp \
# 			baseentity.h \
# 			bert.h \
# 			bertJacobian.h \
# 			bertJacobian.cpp \
# 			bertMisc.h \
# 			bertMisc.cpp \
# 			cholmodWrapper.h \
# 			cholmodWrapper.cpp \
# 			curvefitting.h \
# 			curvefitting.cpp \
# 			datacontainer.h \
# 			datacontainer.cpp \
# 			datamap.h \
# 			datamap.cpp \
# 			dc1dmodelling.h \
# 			dc1dmodelling.cpp \
# 			dcfemmodelling.h \
# 			dcfemmodelling.cpp \
# 			em1dmodelling.h \
# 			em1dmodelling.cpp \
# 			ttdijkstramodelling.h \
# 			ttdijkstramodelling.cpp \
# 			eameshwrapper.h \
# 			eameshwrapper.cpp \
# 			electrode.h \
# 			electrode.cpp \
# 			elementmatrix.h \
# 			elementmatrix.cpp \
# 			expressions.h \
# 			interpolate.h \
# 			interpolate.cpp \
# 			inversion.h \
# 			inversion.cpp \
# 			inversionBase.h \
# 			inversionRollalong.h \
# 			ipcClient.h\
# 			ipcClient.cpp\
# 			kdtreeWrapper.h \
# 			kdtreeWrapper.cpp \
# 			ldlWrapper.h \
# 			ldlWrapper.cpp \
# 			line.h \
# 			line.cpp \
# 			linSolver.h \
# 			linSolver.cpp \
# 			longoptions.h \
# 			longoptions.cpp \
# 			matrix.h \
# 			matrixTemplates.h \
# 			mesh.h \
# 			mesh.cpp \
# 			mesh_io.cpp \
# 			meshEntities.h \
# 			meshEntities.cpp \
# 			meshgenerators.h \
# 			meshgenerators.cpp \
# 			modellingbase.h \
# 			modellingbase.cpp \
# 			node.h \
# 			node.cpp \
# 			numericbase.h \
# 			numericbase.cpp \
# 			plane.h \
# 			plane.cpp \
# 			pos.h \
# 			pos.cpp \
# 			quaternion.h \
# 			quaternion.cpp \
# 			regionManager.h \
# 			regionManager.cpp \
# 			shape.h \
# 			shape.cpp \
# 			solver.h \
# 			solverWrapper.h \
# 			solverWrapper.cpp \
# 			sparsematrix.h \
# 			spline.h \
# 			spline.cpp \
# 			stlvector.h \
# 			stopwatch.h \
# 			stopwatch.cpp \
# 			trans.h \
# 			trianglewrapper.h \
# 			trianglewrapper.cpp \
# 			vector.h \
# 			vectortemplates.h

libgimli_la_SOURCES = \
			exitcodes.h \
			gimli.h \
			gimli.cpp \
			platform.h \
			platform.cpp

libgimli_la_LDFLAGS= \
	-no-undefined -version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
	-release $(LT_RELEASE)
 
# libgimli_la_LIBADD = ../externals/lib/libamd.a \
# 			../externals/lib/libcamd.a \
# 			../externals/lib/libccolamd.a \
# 			../externals/lib/libcholmod.a \
# 			../externals/lib/libcolamd.a \
# 			../externals/lib/libldl.a \
# 			../externals/lib/libtriangle.a