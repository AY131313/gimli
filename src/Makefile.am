lib_LTLIBRARIES = libgimli.la

include_HEADERS = gimli.h

# 			bert.h \
# 			bertJacobian.h \
# 			bertJacobian.cpp \
# 			bertMisc.h \
# 			bertMisc.cpp \
# 			datamap.h \
# 			datamap.cpp \
# 			dcfemmodelling.h \
# 			dcfemmodelling.cpp \
#			dc1dmodelling.h \
#			dc1dmodelling.cpp \
# 			ttdijkstramodelling.h \
# 			ttdijkstramodelling.cpp \
# 			eameshwrapper.h \
# 			eameshwrapper.cpp \
# 			electrode.h \
# 			electrode.cpp \
# 			inversionRollalong.h \
# 			stlvector.h 

libgimli_la_SOURCES = \
			kdtree++/AUTHORS \
			kdtree++/COPYING \
			kdtree++/NEWS \
			kdtree++/README \
			kdtree++/VERSION \
			kdtree++/allocator.hpp \
			kdtree++/function.hpp \
			kdtree++/iterator.hpp \
			kdtree++/kdtree.hpp \
			kdtree++/node.hpp \
			kdtree++/region.hpp \
			baseentity.h \
			cholmodWrapper.h \
			cholmodWrapper.cpp \
			curvefitting.h \
			curvefitting.cpp \
			datacontainer.h \
			datacontainer.cpp \
			elementmatrix.h \
			elementmatrix.cpp \
			em1dmodelling.h \
			em1dmodelling.cpp \
			exitcodes.h \
			expressions.h \
			gimli.h \
			gimli.cpp \
			interpolate.h \
			interpolate.cpp \
			inversion.h \
			inversion.cpp \
			inversionBase.h \
			inversionFramework.h \
			ipcClient.h\
			ipcClient.cpp\
			kdtreeWrapper.h \
			kdtreeWrapper.cpp \
			ldlWrapper.h \
			ldlWrapper.cpp \
			line.h \
			line.cpp \
			linSolver.h \
			linSolver.cpp \
			matrix.h \
			matrixTemplates.h \
			mesh.h \
			mesh.cpp \
			mesh_io.cpp \
			meshentities.h \
			meshentities.cpp \
			meshgenerators.h \
			meshgenerators.cpp \
			modellingbase.h \
			modellingbase.cpp \
			node.h \
			node.cpp \
			numericbase.h \
			numericbase.cpp \
			optionmap.h \
			optionmap.cpp \
			plane.h \
			plane.cpp \
			platform.h \
			platform.cpp \
			pos.h \
			pos.cpp \
			quaternion.h \
			quaternion.cpp \
			regionManager.h \
			regionManager.cpp \
			shape.h \
			shape.cpp \
			solver.h \
			solverWrapper.h \
			solverWrapper.cpp \
			sparsematrix.h \
			spline.h \
			spline.cpp \
			stopwatch.h \
			stopwatch.cpp \
			trans.h \
			triangleWrapper.h \
			triangleWrapper.cpp \
			vector.h \
			vectortemplates.h

libgimli_la_LDFLAGS= \
	-no-undefined -version-info $(LT_CURRENT):$(LT_REVISION):$(LT_AGE) \
	-release $(LT_RELEASE)
 
# libgimli_la_LIBADD = ../externals/lib/libamd.a \
# 			../externals/lib/libcamd.a \
# 			../externals/lib/libccolamd.a \
# 			../externals/lib/libcholmod.a \
# 			../externals/lib/libcolamd.a \
# 			../externals/lib/libldl.a \
# 			../externals/lib/libtriangle.a